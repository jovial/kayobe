---
- include: dell-compute-node-inventory.yml
- import_playbook: baremetal-compute-common.yml

- name: Ensure baremetal compute nodes are PXE booted
  hosts: baremetal-compute
  gather_facts: no
  vars:
    controller_host: "{{ groups['controllers'][0] }}"
    venv: "{{ baremetal_compute_openstack_cli_venv_path }}"
  tasks:
    - name: Get list of nodes
      command: >
        {{ venv }}/bin/openstack baremetal node list -f json --fields uuid name 
      register: nodes_output
      delegate_to: "{{ controller_host }}"
      environment: "{{ openstack_auth_env }}"
      run_once: true
      changed_when: false
      vars:
        # NOTE: Without this, the controller's ansible_host variable will not
        # be respected when using delegate_to.
        ansible_host: "{{ hostvars[controller_host].ansible_host | default(controller_host) }}"
    - name: Set fact containing nodes
      set_fact:
        nodes: "{{ nodes | default({}) | combine({item.Name : item.UUID })}}"
      with_items: "{{ nodes_output.stdout | from_json }}"
      run_once: True
    #- debug:
    #    var: nodes
    - block:
      - name: Ensure ipmitool is installed
        yum:
          name: ipmitool
          state: installed
        become: True
        run_once: True
        delegate_to: "{{ controller_host }}"
        vars:
          # NOTE: Without this, the controller's ansible_host variable will not
          # be respected when using delegate_to.
          ansible_host: "{{ hostvars[controller_host].ansible_host | default(controller_host) }}"

      - name: Ensure baremetal compute nodes are powered off
        command: ipmitool -U {{ ipmi_username }} -P {{ ipmi_password }} -H {{ ipmi_address }} -I lanplus chassis power off
        delegate_to: "{{ controller_host }}"
        register: result
        failed_when:
          - result | failed
          # Some BMCs complain if the node is already powered off.
          - "'Command not supported in present state' not in result.stderr"
        vars:
          # NOTE: Without this, the controller's ansible_host variable will not
          # be respected when using delegate_to.
          ansible_host: "{{ hostvars[controller_host].ansible_host | default(controller_host) }}"

      - name: Pause to prevent overwhelming BMCs
        pause:
          seconds: 5

      - name: Ensure baremetal compute nodes are set to boot via PXE
        command: ipmitool -U {{ ipmi_username }} -P {{ ipmi_password }} -H {{ ipmi_address }} -I lanplus chassis bootdev pxe
        delegate_to: "{{ controller_host }}"
        vars:
          # NOTE: Without this, the controller's ansible_host variable will not
          # be respected when using delegate_to.
          ansible_host: "{{ hostvars[controller_host].ansible_host | default(controller_host) }}"

      - name: Pause to prevent overwhelming BMCs
        pause:
          seconds: 5

      - name: Ensure baremetal compute nodes are powered on
        command: ipmitool -U {{ ipmi_username }} -P {{ ipmi_password }} -H {{ ipmi_address }} -I lanplus chassis power on
        delegate_to: "{{ controller_host }}"
        vars:
          # NOTE: Without this, the controller's ansible_host variable will not
          # be respected when using delegate_to.
          ansible_host: "{{ hostvars[controller_host].ansible_host | default(controller_host) }}"
      when: inventory_hostname not in nodes
